{"version":3,"sources":["common/enums/actions/home.ts","state/reducers/home.ts","common/enums/actions/movie.ts","state/reducers/movie.ts","common/enums/actions/movies.ts","state/reducers/movies.ts","common/enums/actions/search.ts","state/reducers/search.ts","common/enums/path.ts","state/reducers/index.ts","common/enums/sagas/home.ts","components/NavBar/index.tsx","state/actions/home.ts","common/defaults/movie.ts","Pages/Home/MovieCarousel/index.tsx","common/enums/sagas/movies.ts","Pages/Home/index.tsx","state/actions/movies.ts","common/enums/sagas/movie.ts","components/MovieList/index.tsx","Pages/Movies/index.tsx","state/actions/movie.ts","Pages/Movie/MoviDetails/index.tsx","Pages/Movie/index.tsx","common/defaults/endpoints/home.ts","utils/home.ts","state/sagas/home.ts","utils/movies.ts","state/sagas/movies.ts","utils/movie.ts","common/enums/sagas/search.ts","state/sagas/movie.ts","state/actions/search.ts","Pages/Search/SearchResults/index.tsx","Pages/Search/index.tsx","utils/search.ts","state/sagas/search.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomeActions","MovieActions","INITIAL_STATE","popularMovieList","topRatedMovieList","upcomingMovieList","homeReducer","state","action","type","SetPopularMovieList","SetTopRatedMovieList","SetUpcomingMovieList","MoviesActions","movieDetails","undefined","movieReducer","SetMovieDetails","SearchActions","movieList","page","totalPage","moviesReducer","rest","SetMovieList","Path","language","genreID","query","totalPages","searchReducer","SearchByLanguage","SearchByGenre","SearchByQuery","combineReducers","home","movies","movie","search","HomeSaga","NavBar","history","useHistory","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","color","onClick","push","Home","Movies","LocalMovies","FormControl","variant","OutlinedInput","onKeyDown","event","nativeEvent","key","value","target","placeholder","id","size","endAdornment","InputAdornment","MovieDefaults","MoviesSaga","MovieCarousel","useSelector","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","showDots","infinite","keyBoardControl","map","Link","href","Movie","src","PosterURL","poster_path","alt","original_title","dispatch","useDispatch","SetPopularMovieListSaga","SetTopRatedMovieListSaga","SetUpcomingMovieListSaga","MovieSaga","MovieList","length","to","width","window","innerWidth","height","Container","maxWidth","Pagination","count","shape","onChange","props","match","params","SetMovieListSaga","setMovieList","MovieDetails","Card","raised","Grid","container","item","xs","CardMedia","component","title","image","List","ListItem","genres","genre","index","name","spoken_languages","iso_639_1","english_name","overview","videos","results","movieID","SetMovieDetailsSaga","API_KEY","HomeEndpoint","PopularMoviesEndpoint","TopRatedMoviesEndpoint","UpcomingMoviesEndpoint","source","axios","CancelToken","fetchMovieList","endpoint","a","get","cancelToken","token","getPopularMovieList","getTopRatedMovieListSaga","getUpcomingMovieListSaga","watchUpcomingMovieListSaga","watchSetTopRatedMovieListSaga","watchSetPopularMovieListSaga","rootSaga","call","response","data","put","takeLatest","fork","getMovieList","watchSetMovieListSaga","total_results","Math","ceil","parseInt","SearchSaga","fetchMovieDetails","getMovieDetails","watchSetMovieDetailsSaga","SearchResults","Search","SearchByQuerySaga","searchByQuery","SearchByLanguageSaga","searchByLanguage","SearchByGenreSaga","searchByGenre","fetchSearchByLanguageMovieList","fetchSearchByGenreMovieList","fetchSearchByQueryMovieList","getSearchByLanguageResults","getSearchByGenreResults","getSearchByQuery","watchSearchByQuerySaga","watchSearchByLanguageSaga","watchSearchByGenreSaga","App","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","className","exact","path","Root","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13f051c2.chunk.js","sourcesContent":["export enum HomeActions{\n    SetPopularMovieList = \"SET_POPULAR_MOVIE_LIST\",\n    SetTopRatedMovieList = \"SET_TOP_RATED_MOVIE_LIST\",\n    SetUpcomingMovieList = \"SET_UPCOMING_MOVIE_LIST\",\n}","import { HomeActions } from \"../../common/enums/actions/home\";\n\nconst INITIAL_STATE = {\n  popularMovieList: [],\n  topRatedMovieList: [],\n  upcomingMovieList: [],\n};\n\nconst homeReducer = (state = INITIAL_STATE, action: any) => {\n  const { type } = action;\n  switch (type) {\n    case HomeActions.SetPopularMovieList:\n      const { popularMovieList } = action;\n      return { ...state, popularMovieList };\n    case HomeActions.SetTopRatedMovieList:\n      const { topRatedMovieList } = action;\n      return { ...state, topRatedMovieList };\n    case HomeActions.SetUpcomingMovieList:\n      const { upcomingMovieList } = action;\n      return { ...state, upcomingMovieList };\n    default:\n      return state;\n  }\n};\n\nexport default homeReducer;","export enum MovieActions{\n    SetMovieDetails = \"SET_MOVIE_DETAILS\"\n}","import { MovieActions } from \"../../common/enums/actions/movie\";\n\nconst INITIAL_STATE = {\n  movieDetails: undefined,\n};\n\nconst movieReducer = (state = INITIAL_STATE, action: any) => {\n  const { type } = action;\n  switch (type) {\n    case MovieActions.SetMovieDetails:\n      const { movieDetails } = action;\n      return { ...state, movieDetails };\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n","//action for movies page\n\nexport enum MoviesActions{\n    SetMovieList = \"SET_MOVIE_LIST\"\n}","import { MoviesActions } from \"../../common/enums/actions/movies\";\nconst INITIAL_STATE = {\n  movieList: [],\n  page:1,\n  totalPage:1\n};\nconst moviesReducer = (state = INITIAL_STATE, action: any) => {\n  const { type,...rest } = action;\n  switch (type) {\n    case MoviesActions.SetMovieList:\n      return { ...state, ...rest };\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;\n","export enum SearchActions{\n    SearchByLanguage = \"SEARCH_BY_LANGUAGE\",\n    SearchByGenre = \"SEARCH_BY_GENRE\",\n    SearchByQuery = \"SEARCH_BY_QUERY\"\n}","import { SearchActions } from \"../../common/enums/actions/search\";\n\nconst INITIAL_STATE = {\n  language: undefined,\n  genreID: undefined,\n  query:undefined,\n  page: 1,\n  movieList: [],\n  totalPages: 1,\n};\nconst searchReducer = (state = INITIAL_STATE, action: any) => {\n  const { type, ...rest } = action;\n  switch (type) {\n    case SearchActions.SearchByLanguage:\n      return {\n        ...state,\n        ...rest,\n        genreID: undefined,\n        query: undefined,\n      };\n    case SearchActions.SearchByGenre:\n      return {\n        ...state,\n        ...rest,\n        language: undefined,\n        query: undefined,\n      };\n    case SearchActions.SearchByQuery:\n      return { ...state, ...rest, language: undefined, genreID: undefined };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","export enum Path{\n    Home = \"/movie-catalogue/home\",\n    Root =\"/movie-catalogue/\",\n    Movies =\"/movie-catalogue/movies/\",\n    Movie = \"/movie-catalogue/movie/\",\n    SearchByGenre = \"/movie-catalogue/search/genre/\",\n    SearchByLanguage = \"/movie-catalogue/search/language/\",\n    SearchByQuery = \"/movie-catalogue/search/query/\"\n}","import {combineReducers} from 'redux'\nimport homeReducer from './home'\nimport movieReducer from './movie'\nimport moviesReducer from './movies'\nimport searchReducer from './search'\nexport default combineReducers({\n    home:homeReducer,\n    movies:moviesReducer,\n    movie:movieReducer,\n    search:searchReducer\n})","export enum HomeSaga{\n    SetPopularMovieListSaga = \"SET_LATEST_MOVIE_LIST_SAGA\",\n    SetTopRatedMovieListSaga = \"SET_TOP_RATED_MOVIE_LIST_SAGA\",\n    SetUpcomingMovieListSaga = \"SET_UPCOMING_MOVIE_LIST_SAGA\"\n}","import { LocalMovies, Search, Home } from \"@mui/icons-material\";\nimport {\n  AppBar,\n  Box,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  OutlinedInput,\n  Toolbar,\n} from \"@mui/material\";\nimport { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Path } from \"../../common/enums/path\";\n\nconst NavBar: FC<{}> = () => {\n  const history = useHistory();\n\n  const handleSearchOnClick = () => {};\n\n  const handleSearchKeyDown = (event: any) => {\n    const {key} = event.nativeEvent;\n    if(key !== \"Enter\") return;\n    const {value} = event.target;\n    if(!value) return\n    history.push(`${Path.SearchByQuery}${value}/page/1`)\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton color=\"inherit\" onClick={() => history.push(Path.Home)}>\n            <Home />\n          </IconButton>\n          <IconButton color=\"inherit\" onClick={() => history.push(`${Path.Movies}page/1`)}>\n            <LocalMovies />\n          </IconButton>\n          <div>\n            <FormControl variant=\"outlined\">\n              <OutlinedInput\n                onKeyDown={handleSearchKeyDown}\n                placeholder=\"Search\"\n                id=\"outlined-adornment-weight\"\n                size=\"small\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={handleSearchOnClick}>\n                      <Search />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import { HomeSaga } from \"../../common/enums/sagas/home\";\n\nexport const setPopularMovieList = () => {\n  return {\n    type: HomeSaga.SetPopularMovieListSaga,\n  };\n};\n\nexport const setTopRatedMovieList = () => {\n  return {\n    type: HomeSaga.SetTopRatedMovieListSaga,\n  };\n};\n\nexport const setUpcomingMovieList = () => {\n  return {\n    type: HomeSaga.SetUpcomingMovieListSaga,\n  };\n};\n","export enum MovieDefaults{\n    PosterURL =\"https://image.tmdb.org/t/p/w500/\",\n}","import { Link } from \"@mui/material\";\nimport { FC, Fragment } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { useSelector } from \"react-redux\";\nimport { MovieDefaults } from \"../../../common/defaults/movie\";\nimport { Path } from \"../../../common/enums/path\";\nimport { Props } from \"./types\";\n\nconst MovieCarousel: FC<Props> = ({ type }) => {\n  const movieList = useSelector((state: any) => {\n    if (type === \"Popular\") {\n      return state.home.popularMovieList;\n    } else if (type === \"Top Rated\") {\n      return state.home.topRatedMovieList;\n    } else if (type === \"Upcoming\") {\n      return state.home.upcomingMovieList;\n    } else {\n      return [];\n    }\n  });\n\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3,\n      slidesToSlide: 3, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n      slidesToSlide: 2, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n  };\n  return (\n    <Fragment>\n      <h1>{type}</h1>\n      <Carousel\n        responsive={responsive}\n        showDots={true}\n        infinite={true}\n        keyBoardControl={true}\n      >\n        {movieList?.map((movie: any) => {\n          return (\n            <div key={movie.id}>\n              <Link href={`${Path.Movie}${movie.id}`}>\n              <img\n                src={`${MovieDefaults.PosterURL}${movie.poster_path}`}\n                alt={movie.original_title}\n              />\n              </Link>\n            </div>\n          );\n        })}\n      </Carousel>\n    </Fragment>\n  );\n};\n\nexport default MovieCarousel;\n","export enum MoviesSaga{\n    SetMovieListSaga = \"SET_MOVIE_LIST_SAGA\",\n}","import { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport NavBar from \"../../components/NavBar\";\nimport {\n  setPopularMovieList,\n  setTopRatedMovieList,\n  setUpcomingMovieList,\n} from \"../../state/actions/home\";\nimport MovieCarousel from \"./MovieCarousel\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  dispatch(setPopularMovieList());\n  dispatch(setTopRatedMovieList());\n  dispatch(setUpcomingMovieList());\n\n  return (\n    <Fragment>\n      <NavBar />\n      <MovieCarousel type=\"Popular\" />\n      <MovieCarousel type=\"Top Rated\" />\n      <MovieCarousel type=\"Upcoming\" />\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import { MoviesSaga } from \"../../common/enums/sagas/movies\";\n\nexport const setMovieList = (page:string) => {\n  return {\n    type: MoviesSaga.SetMovieListSaga,\n    page\n  };\n};\n","export enum MovieSaga{\n    SetMovieDetailsSaga = \"SET_MOVIE_DETAILS_SAGA\"\n}","import { Container, Pagination } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MovieDefaults } from \"../../common/defaults/movie\";\nimport { Path } from \"../../common/enums/path\";\n\nconst MovieList = () => {\n  const { movieList, page, totalPage } = useSelector(\n    (state: any) => state.movies\n  );\n\n  const history = useHistory();\n  const handleChangePage = (\n    event: React.ChangeEvent<unknown>,\n    page: number\n  ) => {\n    history.push(`${Path.Movies}page/${page}`);\n  };\n\n  return (\n    <Fragment>\n      {!!movieList.length ? (\n        <Fragment>\n          {movieList.map((movie: any) => {\n            return (\n              <Link to={`${Path.Movie}${movie.id}`} key={movie.id}>\n                <img\n                  src={`${MovieDefaults.PosterURL}${movie.poster_path}`}\n                  alt={movie.original_title}\n                  width={window.innerWidth / 6}\n                  height={(window.innerWidth / 6) * 1.5}\n                />\n              </Link>\n            );\n          })}\n          <Container maxWidth=\"sm\">\n            <Pagination\n              count={totalPage}\n              page={page}\n              color=\"primary\"\n              size=\"large\"\n              variant=\"outlined\"\n              shape=\"rounded\"\n              onChange={handleChangePage}\n            />\n          </Container>\n        </Fragment>\n      ) : (\n        \"No Results\"\n      )}\n    </Fragment>\n  );\n};\n\nexport default MovieList;\n","import { useDispatch } from \"react-redux\";\nimport { setMovieList } from \"../../state/actions/movies\";\nimport MovieList from \"../../components/MovieList\";\nimport { FC, Fragment } from \"react\";\nimport NavBar from \"../../components/NavBar\";\nimport { Props } from \"./types\";\n\nconst Movies:FC<Props> = (props:Props) => {\n  const dispatch = useDispatch();\n  const {page=\"1\"} = props.match.params;\n  dispatch(setMovieList(page));\n  return (\n    <Fragment>\n      <NavBar />\n      <MovieList />\n    </Fragment>\n  );\n};\n\nexport default Movies;\n","import { MovieSaga } from \"../../common/enums/sagas/movie\";\n\nexport const setMovieDetails = (movieID: string) => {\n  return {\n    type: MovieSaga.SetMovieDetailsSaga,\n    movieID,\n  };\n};\n","import { Card, CardMedia, Grid, List, ListItem } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Path } from \"../../../common/enums/path\";\n\nconst MovieDetails = () => {\n  const movieDetails = useSelector((state: any) => state.movie.movieDetails);\n  if (!movieDetails) {\n    return null;\n  }\n  return (\n    <Fragment>\n      <br></br>\n      <br></br>\n      <Card raised>\n        <Grid container>\n          <Grid item xs={4}>\n            <CardMedia\n              component=\"img\"\n              alt={movieDetails.title}\n              image={`https://image.tmdb.org/t/p/original/${movieDetails.poster_path}`}\n              title={movieDetails.title}\n            />\n          </Grid>\n          <Grid item xs={8}>\n            <List>\n              <ListItem>Title: {movieDetails.title}</ListItem>\n              {movieDetails.title !== movieDetails.original_title && (\n                <ListItem>\n                  Original Title: {movieDetails.original_title}\n                </ListItem>\n              )}\n              {!!movieDetails.genres.length && (\n                <ListItem>\n                  Genres:\n                  {movieDetails.genres.map((genre: any, index: number) => {\n                    return (\n                      <Fragment key={index}>\n                        &nbsp;&nbsp;\n                        <Link\n                          to={`${Path.SearchByGenre}${genre.id}/page/1`}\n                          key={index}\n                        >\n                          {genre.name}\n                        </Link>\n                      </Fragment>\n                    );\n                  })}\n                </ListItem>\n              )}\n              {!!movieDetails.spoken_languages.length && (\n                <ListItem>\n                  Language:\n                  {movieDetails.spoken_languages.map(\n                    (language: any, index: number) => {\n                      return (\n                        <Fragment key={index}>\n                          &nbsp;&nbsp;\n                          <Link\n                            to={`${Path.SearchByLanguage}${language.iso_639_1}/page/1`}\n                            key={index}\n                          >\n                            {language.english_name}\n                          </Link>\n                        </Fragment>\n                      );\n                    }\n                  )}\n                </ListItem>\n              )}\n              {movieDetails.overview && (\n                <ListItem>Overview: {movieDetails.overview}</ListItem>\n              )}\n              {!!movieDetails.videos.results.length && (\n                <iframe\n                  title=\"trailer\"\n                  width=\"1280\"\n                  height=\"720\"\n                  src={`https://www.youtube.com/embed/${movieDetails.videos.results[0].key}`}\n                />\n              )}\n            </List>\n          </Grid>\n        </Grid>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default MovieDetails;\n","import { FC, Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport NavBar from \"../../components/NavBar\";\nimport { setMovieDetails } from \"../../state/actions/movie\";\nimport MovieDetails from \"./MoviDetails\";\nimport { Props } from \"./types\";\n\nconst Movie: FC<Props> = (props: Props) => {\n  const dispatch = useDispatch();\n  dispatch(setMovieDetails(props.match.params.id));\n  return (\n    <Fragment>\n      <NavBar />\n      <MovieDetails />\n    </Fragment>\n  );\n};\n\nexport default Movie;\n","const API_KEY = \"6fdc960c4cb19000df3556ff8e8b5831\";\n\nexport const HomeEndpoint = {\n  PopularMoviesEndpoint: `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&page=1`,\n  TopRatedMoviesEndpoint: `https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&page=1`,\n  UpcomingMoviesEndpoint: `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&page=1`,\n};\n","import axios from \"axios\";\nconst source = axios.CancelToken.source();\nexport const fetchMovieList = async (endpoint: string) => {\n  return await axios.get(endpoint, {\n    cancelToken: source.token,\n  });\n};","import { HomeSaga } from \"../../common/enums/sagas/home\";\nimport { takeLatest, call, put, fork } from \"@redux-saga/core/effects\";\nimport { HomeActions } from \"../../common/enums/actions/home\";\nimport { HomeEndpoint } from \"../../common/defaults/endpoints/home\";\nimport { fetchMovieList } from \"../../utils/home\";\n//worker functions\nfunction* getPopularMovieList(): any {\n  const response = yield call(fetchMovieList,HomeEndpoint.PopularMoviesEndpoint);\n  const { results: popularMovieList } = response.data;\n  yield put({ type: HomeActions.SetPopularMovieList, popularMovieList });\n}\n\nfunction* getTopRatedMovieListSaga(): any {\n  const response = yield call(fetchMovieList,HomeEndpoint.TopRatedMoviesEndpoint);\n  const { results: topRatedMovieList } = response.data;\n  yield put({ type: HomeActions.SetTopRatedMovieList, topRatedMovieList });\n}\n\nfunction* getUpcomingMovieListSaga(): any {\n  const response = yield call(fetchMovieList,HomeEndpoint.UpcomingMoviesEndpoint);\n  const { results: upcomingMovieList } = response.data;\n  yield put({ type: HomeActions.SetUpcomingMovieList, upcomingMovieList });\n}\n\n//watcher function\nfunction* watchUpcomingMovieListSaga() {\n  yield takeLatest(HomeSaga.SetUpcomingMovieListSaga, getUpcomingMovieListSaga);\n}\nfunction* watchSetTopRatedMovieListSaga() {\n  yield takeLatest(HomeSaga.SetTopRatedMovieListSaga, getTopRatedMovieListSaga);\n}\nfunction* watchSetPopularMovieListSaga() {\n  yield takeLatest(HomeSaga.SetPopularMovieListSaga, getPopularMovieList);\n}\n\nexport default function* rootSaga() {\n  yield fork(watchSetTopRatedMovieListSaga);\n  yield fork(watchSetPopularMovieListSaga);\n  yield fork(watchUpcomingMovieListSaga);\n}","import axios from \"axios\";\nconst API_KEY = \"6fdc960c4cb19000df3556ff8e8b5831\";\nexport const fetchMovieList = async (page: any) => {\n  return await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${page}`);\n};\n","import { takeLatest, call, put } from \"@redux-saga/core/effects\";\nimport { MoviesActions } from \"../../common/enums/actions/movies\";\nimport { MoviesSaga } from \"../../common/enums/sagas/movies\";\nimport { fetchMovieList } from \"../../utils/movies\";\n//worker functions\nfunction* getMovieList({ page }: any): any {\n  const response = yield call(fetchMovieList, page);\n  const { results: movieList, total_results } = response.data;\n  yield put({\n    type: MoviesActions.SetMovieList,\n    movieList,\n    totalPage: Math.ceil(total_results / 20),\n    page: parseInt(page),\n  });\n}\n\n//watcher function\nexport function* watchSetMovieListSaga() {\n  yield takeLatest(MoviesSaga.SetMovieListSaga, getMovieList);\n}\n","import axios from \"axios\";\nconst API_KEY = \"6fdc960c4cb19000df3556ff8e8b5831\";\n\nconst source = axios.CancelToken.source();\nexport const fetchMovieDetails = async (movieID: string) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US&append_to_response=videos,imagess&include_image_language=en,null`,\n    {\n      cancelToken: source.token,\n    }\n  );\n};","export enum SearchSaga{\n    SearchByLanguageSaga = \"SEARCH_BY_LANGUAGE_SAGA\",\n    SearchByGenreSaga = \"SEARCH_BY_GENRE_SAGA\",\n    SearchByQuerySaga = \"SEARCH_BY_QUERY_SAGA\"\n}\n","import { takeLatest, call, put } from \"@redux-saga/core/effects\";\nimport { MovieActions } from \"../../common/enums/actions/movie\";\nimport { MovieSaga } from \"../../common/enums/sagas/movie\";\nimport { fetchMovieDetails } from \"../../utils/movie\";\n//worker functions\nfunction* getMovieDetails({ movieID }: any): any {\n  const response = yield call(fetchMovieDetails, movieID);\n  const {data:movieDetails} = response;\n  yield put({ type: MovieActions.SetMovieDetails, movieDetails });\n}\n\n//watcher function\nexport function* watchSetMovieDetailsSaga() {\n  yield takeLatest(MovieSaga.SetMovieDetailsSaga, getMovieDetails);\n}\n","import { SearchSaga } from \"../../common/enums/sagas/search\";\n\nexport const searchByLanguage = (language: string, page: string) => {\n  return {\n    type: SearchSaga.SearchByLanguageSaga,\n    language,\n    page,\n  };\n};\n\nexport const searchByGenre = (genreID: string, page: string) => {\n  return {\n    type: SearchSaga.SearchByGenreSaga,\n    genreID,\n    page,\n  };\n};\n\nexport const searchByQuery = (query: string, page: string) => {\n  return {\n    type: SearchSaga.SearchByQuerySaga,\n    query,\n    page,\n  };\n};\n","import { Container, Pagination } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MovieDefaults } from \"../../../common/defaults/movie\";\nimport { Path } from \"../../../common/enums/path\";\n\nconst SearchResults = () => {\n  const { movieList, page, totalPages, language, genreID, query } = useSelector(\n    (state: any) => state.search\n  );\n  const history = useHistory();\n  const handleChangePage = (\n    event: React.ChangeEvent<unknown>,\n    value: number\n  ) => {\n    if (genreID) {\n      history.push(`${Path.SearchByGenre}${genreID}/page/${value}`);\n    } else if (language) {\n      history.push(`${Path.SearchByLanguage}${language}/page/${value}`);\n    } else if (query) {\n      history.push(`${Path.SearchByQuery}${query}/page/${value}`);\n    }\n  };\n\n  return (\n    <Fragment>\n      {!!movieList.length ? (\n        <Fragment>\n          {movieList.map((movie: any) => {\n            return (\n              <Link to={`${Path.Movie}${movie.id}`} key={movie.id}>\n                <img\n                  src={`${MovieDefaults.PosterURL}${movie.poster_path}`}\n                  alt={movie.original_title}\n                  width={window.innerWidth / 6}\n                  height={(window.innerWidth / 6) * 1.5}\n                />\n              </Link>\n            );\n          })}\n          <Container maxWidth=\"sm\">\n            <Pagination\n              count={parseInt(totalPages)}\n              page={parseInt(page)}\n              color=\"primary\"\n              size=\"large\"\n              variant=\"outlined\"\n              shape=\"rounded\"\n              onChange={handleChangePage}\n            />\n          </Container>\n        </Fragment>\n      ) : (\n        \"No Results\"\n      )}\n    </Fragment>\n  );\n};\n\nexport default SearchResults;\n","import { FC, Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport NavBar from \"../../components/NavBar\";\nimport {\n  searchByGenre,\n  searchByLanguage,\n  searchByQuery,\n} from \"../../state/actions/search\";\nimport SearchResults from \"./SearchResults\";\nimport { Props } from \"./types\";\n\nconst Search: FC<Props> = (props: Props) => {\n  const dispatch = useDispatch();\n  const {\n    page,\n    language = undefined,\n    genreID = undefined,\n    query = undefined,\n  } = props.match.params;\n  if (genreID && !language && !query) {\n    dispatch(searchByGenre(genreID, page));\n  } else if (language && !genreID && !query) {\n    dispatch(searchByLanguage(language, page));\n  } else if (query && !language && !genreID) {\n    dispatch(searchByQuery(query, page));\n  }\n  return (\n    <Fragment>\n      <NavBar />\n      <SearchResults />\n    </Fragment>\n  );\n};\n\nexport default Search;\n","import axios from \"axios\";\nconst source = axios.CancelToken.source();\nexport const fetchSearchByLanguageMovieList = async (\n  language: string,\n  page: string\n) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/discover/movie?api_key=6fdc960c4cb19000df3556ff8e8b5831&with_original_language=${language}&page=${page}`,\n    {\n      cancelToken: source.token,\n    }\n  );\n};\n\nexport const fetchSearchByGenreMovieList = async (\n  genreID: string,\n  page: string\n) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/discover/movie?api_key=6fdc960c4cb19000df3556ff8e8b5831&with_genres=${genreID}&page=${page}`,\n    {\n      cancelToken: source.token,\n    }\n  );\n};\n\nexport const fetchSearchByQueryMovieList = async (\n  query: string,\n  page: string\n) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=6fdc960c4cb19000df3556ff8e8b5831&query=${query}&page=${page}`,\n    {\n      cancelToken: source.token,\n    }\n  );\n};\n","import { call, put, takeLatest } from \"@redux-saga/core/effects\";\nimport { SearchActions } from \"../../common/enums/actions/search\";\nimport { SearchSaga } from \"../../common/enums/sagas/search\";\nimport {\n  fetchSearchByGenreMovieList,\n  fetchSearchByLanguageMovieList,\n  fetchSearchByQueryMovieList,\n} from \"../../utils/search\";\n\nfunction* getSearchByLanguageResults({ language, page }: any): any {\n  page = parseInt(page);\n  const response = yield call(fetchSearchByLanguageMovieList, language, page);\n  const { results: movieList, total_results } = response.data;\n  yield put({\n    type: SearchActions.SearchByLanguage,\n    movieList,\n    page,\n    language,\n    totalPages: Math.ceil(total_results / 20),\n  });\n}\n\nfunction* getSearchByGenreResults({ genreID, page }: any): any {\n  page = parseInt(page);\n  const response = yield call(fetchSearchByGenreMovieList, genreID, page);\n  const { results: movieList, total_results } = response.data;\n  yield put({\n    type: SearchActions.SearchByGenre,\n    movieList,\n    page,\n    genreID,\n    totalPages: Math.ceil(total_results / 20),\n  });\n}\n\nfunction* getSearchByQuery({ query, page }: any): any {\n  const response = yield call(fetchSearchByQueryMovieList, query, page);\n  const { results: movieList, total_results } = response.data;\n  yield put({\n    type: SearchActions.SearchByQuery,\n    movieList,\n    page,\n    query,\n    totalPages: Math.ceil(total_results / 20),\n  });\n}\n\nexport function* watchSearchByQuerySaga() {\n  yield takeLatest(SearchSaga.SearchByQuerySaga, getSearchByQuery);\n}\n\nexport function* watchSearchByLanguageSaga() {\n  yield takeLatest(SearchSaga.SearchByLanguageSaga, getSearchByLanguageResults);\n}\n\nexport function* watchSearchByGenreSaga() {\n  yield takeLatest(SearchSaga.SearchByGenreSaga, getSearchByGenreResults);\n}\n","import { Provider } from \"react-redux\";\nimport reducer from \"./state/reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Pages/Home\";\nimport Movies from \"./Pages/Movies\";\nimport Movie from \"./Pages/Movie\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport rootSaga from \"./state/sagas/home\";\nimport { Path } from \"./common/enums/path\";\nimport { watchSetMovieListSaga } from \"./state/sagas/movies\";\nimport { watchSetMovieDetailsSaga } from \"./state/sagas/movie\";\nimport Search from \"./Pages/Search\";\nimport {\n  watchSearchByLanguageSaga,\n  watchSearchByGenreSaga,\n  watchSearchByQuerySaga,\n} from \"./state/sagas/search\";\nconst App = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(reducer, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n  sagaMiddleware.run(watchSetMovieListSaga);\n  sagaMiddleware.run(watchSetMovieDetailsSaga);\n  sagaMiddleware.run(watchSearchByLanguageSaga);\n  sagaMiddleware.run(watchSearchByGenreSaga);\n  sagaMiddleware.run(watchSearchByQuerySaga)\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path={`${Path.SearchByGenre}:genreID/page/:page`}\n              component={Search}\n            />\n            <Route\n              exact\n              path={`${Path.SearchByLanguage}:language/page/:page`}\n              component={Search}\n            />\n            <Route\n              exact\n              path={`${Path.SearchByQuery}:query/page/:page`}\n              component={Search}\n            />\n            <Route exact path={[Path.Home, Path.Root]} component={Home} />\n            <Route exact path={`${Path.Movies}page/:page`} component={Movies} />\n            <Route exact path={`${Path.Movie}:id`} component={Movie} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}